@model ProductListViewModel
<ol class="breadcrumb">
    <li class="breadcrumb-item">
        <a asp-controller="Home" asp-action="index">Home</a>
    </li>
    <li class="breadcrumb-item active">Products</li>
</ol>
<div class="container-fluid">
    <div class="animated fadeIn">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-header">
                        <i class="fa fa-align-justify"></i>
                        <strong>Site Templates</strong>
                        @if (ViewBag.Message != null)
                        {
                            <span class="badge-pill badge-success float-right">@ViewBag.Message</span>
                        }
                    </div>
                    <div class="card-body">
                        <form id="templateAction">
                            <input type="hidden" id="templateIds" name="templateIds">
                            <button asp-action="Register" class="btn btn-primary"><i class="fa fa-plus-square"></i> Add new product</button>
                            <button id="btnDelete" asp-action="DeleteTemplate" class="btn btn-danger"><i class="fa fa-remove"></i> Delete products</button>
                        </form>
                        <div class="mt-3"></div>
                        <form id="templateRequest" asp-action="Index" method="get">
                            <input type="hidden" name="pageSizeString" id="pageSizeString">
                            <input type="hidden" id="parametersSearch" name="parametersSearch">
                            <table class="table table-responsive-sm table-hover table-outline w-auto">
                                <thead class="thead-light">
                                    <tr>
                                        <th><input type="checkbox" id="allSelection" /></th>
                                        <th>Action</th>
                                        <th>
                                            Name
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td></td>
                                        <td><button id="btnSearch" class="btn btn-primary"><i class="fa fa-search"></i> Search</button></td>
                                        <td><input id="inputName" asp-for="Request.Name" class="form-control" placeholder="Name"></td>
                                    </tr>
                                    @if (Model.Templates != null)
                                    {
                                        @foreach (var item in Model.Templates)
                                        {
                                            <tr>
                                                <td><input type="checkbox" id="@item.Id" name="cbTemplate" /></td>
                                                <td>
                                                    <a asp-route-id="@item.Id" asp-action="Details"><i class="fa fa-edit"></i></a>
                                                    <a asp-action="DeleteTemplate" asp-route-templateIds="@item.Id"><img src="~/img/delete.png"></a>
                                                </td>
                                                <td>@item.Name</td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </form>
                        @await Component.InvokeAsync("Page", new { model = Model.Page })
                    </div>
                </div>
            </div>
        </div>
        <!-- /.conainer-fluid -->
    </div>
</div>
@section Scripts
    {
    <script type="text/javascript">
        function updateParametersSearch() {
            var parameters = {
                name: $('#inputName').val(),
            };
            $('#parametersSearch').val(JSON.stringify(parameters));
            $('#pageSizeString').val($('#pageSize').val());
        }

        function onPageSizeChanged() {
            updateParametersSearch();
            $('#templateRequest').submit();
        }

        $(document).ready(function () {
            $('#btnSearch').click(function () {
                updateParametersSearch();
            });

            $('#btnDelete').click(function () {
                var ids = "";
                document.getElementsByName('cbTemplate').forEach(s => {
                    if (s.checked) {
                        ids += s.id + ",";
                    }
                });

                if (ids !== "") {
                    // remove last character
                    ids = ids.slice(0, -1);
                }

                $('#templateIds').val(ids);
                $('#templateAction').submit();
            });

            $('#allSelection').change(function () {
                if (this.checked) {
                    // the checkbox is now checked
                    document.getElementsByName('cbTemplate').forEach(s => s.checked = true);
                } else {
                    // the checkbox is now no longer checked
                    document.getElementsByName('cbTemplate').forEach(s => s.checked = false);
                }
            });
        });</script>
}